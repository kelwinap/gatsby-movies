{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","webpack:///./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","webpack:///./node_modules/semantic-ui-react/dist/es/modules/Embed/Embed.js","webpack:///./src/templates/movie.tsx","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"names":["module","exports","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","arr","isArray","i","arr2","length","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","handledProps","propTypes","create","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","inverted","padded","relaxed","stackable","Column","Row","_Component","Embed","_getPrototypeOf2","_this","this","_len","arguments","args","_key","apply","concat","e","onClick","active","state","trySetState","key","value","_this$props","_this$props$autoplay","autoplay","_this$props$brandedUI","brandedUI","_this$props$color","_this$props$hd","hd","id","source","url","encodeURIComponent","join","_this$props2","aspectRatio","icon","placeholder","iconShorthand","undefined","handleClick","Icon","autoGenerateKey","src","renderEmbed","_this$props3","content","iframe","isNil","getSrc","defaultProps","allowFullScreen","frameBorder","height","scrolling","title","withLayout","movie","data","movies","style","marginTop","Image","borderRadius","posterPath","fontWeight","releaseDate","voteAverage","overview","videos","Query","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"mappings":"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","file":"component---src-templates-movie-tsx-f505391c931eb07395c7.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","import \"core-js/modules/es6.array.is-array\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import \"core-js/modules/es6.array.is-array\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, createHTMLIframe, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An embed displays content from other websites like YouTube videos or Google Maps.\n */\n\nvar Embed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Embed, _Component);\n\n  function Embed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Embed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Embed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      var active = _this.state.active;\n      if (onClick) onClick(e, _objectSpread({}, _this.props, {\n        active: true\n      }));\n      if (!active) _this.trySetState({\n        active: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Embed, [{\n    key: \"getSrc\",\n    value: function getSrc() {\n      var _this$props = this.props,\n          _this$props$autoplay = _this$props.autoplay,\n          autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,\n          _this$props$brandedUI = _this$props.brandedUI,\n          brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,\n          _this$props$color = _this$props.color,\n          color = _this$props$color === void 0 ? '#444444' : _this$props$color,\n          _this$props$hd = _this$props.hd,\n          hd = _this$props$hd === void 0 ? true : _this$props$hd,\n          id = _this$props.id,\n          source = _this$props.source,\n          url = _this$props.url;\n\n      if (source === 'youtube') {\n        return [\"//www.youtube.com/embed/\".concat(id), '?autohide=true', \"&amp;autoplay=\".concat(autoplay), \"&amp;color=\".concat(encodeURIComponent(color)), \"&amp;hq=\".concat(hd), '&amp;jsapi=false', \"&amp;modestbranding=\".concat(brandedUI), \"&amp;rel=\".concat(brandedUI ? 0 : 1)].join('');\n      }\n\n      if (source === 'vimeo') {\n        return [\"//player.vimeo.com/video/\".concat(id), '?api=false', \"&amp;autoplay=\".concat(autoplay), '&amp;byline=false', \"&amp;color=\".concat(encodeURIComponent(color)), '&amp;portrait=false', '&amp;title=false'].join('');\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          aspectRatio = _this$props2.aspectRatio,\n          className = _this$props2.className,\n          icon = _this$props2.icon,\n          placeholder = _this$props2.placeholder;\n      var active = this.state.active;\n      var classes = cx('ui', aspectRatio, useKeyOnly(active, 'active'), 'embed', className);\n      var rest = getUnhandledProps(Embed, this.props);\n      var ElementType = getElementType(Embed, this.props);\n      var iconShorthand = icon !== undefined ? icon : 'video play';\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick\n      }), Icon.create(iconShorthand, {\n        autoGenerateKey: false\n      }), placeholder && React.createElement(\"img\", {\n        className: \"placeholder\",\n        src: placeholder\n      }), this.renderEmbed());\n    }\n  }, {\n    key: \"renderEmbed\",\n    value: function renderEmbed() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          iframe = _this$props3.iframe,\n          source = _this$props3.source;\n      var active = this.state.active;\n      if (!active) return null;\n      if (!childrenUtils.isNil(children)) return React.createElement(\"div\", {\n        className: \"embed\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return React.createElement(\"div\", {\n        className: \"embed\"\n      }, content);\n      return React.createElement(\"div\", {\n        className: \"embed\"\n      }, createHTMLIframe(childrenUtils.isNil(iframe) ? this.getSrc() : iframe, {\n        defaultProps: {\n          allowFullScreen: false,\n          frameBorder: 0,\n          height: '100%',\n          scrolling: 'no',\n          src: this.getSrc(),\n          title: \"Embedded content from \".concat(source, \".\"),\n          width: '100%'\n        },\n        autoGenerateKey: false\n      }));\n    }\n  }]);\n\n  return Embed;\n}(Component);\n\n_defineProperty(Embed, \"autoControlledProps\", ['active']);\n\n_defineProperty(Embed, \"handledProps\", [\"active\", \"as\", \"aspectRatio\", \"autoplay\", \"brandedUI\", \"children\", \"className\", \"color\", \"content\", \"defaultActive\", \"hd\", \"icon\", \"id\", \"iframe\", \"onClick\", \"placeholder\", \"source\", \"url\"]);\n\nexport { Embed as default };\nEmbed.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An embed can be active. */\n  active: PropTypes.bool,\n\n  /** An embed can specify an alternative aspect ratio. */\n  aspectRatio: PropTypes.oneOf(['4:3', '16:9', '21:9']),\n\n  /** Setting to true or false will force autoplay. */\n  autoplay: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n\n  /** Whether to show networks branded UI like title cards, or after video calls to action. */\n  brandedUI: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Specifies a default chrome color with Vimeo or YouTube. */\n  color: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initial value of active. */\n  defaultActive: PropTypes.bool,\n\n  /** Whether to prefer HD content. */\n  hd: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n\n  /** Specifies an icon to use with placeholder content. */\n  icon: customPropTypes.itemShorthand,\n\n  /** Specifies an id for source. */\n  id: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\n\n  /** Shorthand for HTML iframe. */\n  iframe: customPropTypes.every([customPropTypes.demand(['source']), customPropTypes.itemShorthand]),\n\n  /**\n   * Сalled on click.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed value.\n   */\n  onClick: PropTypes.func,\n\n  /** A placeholder image for embed. */\n  placeholder: PropTypes.string,\n\n  /** Specifies a source to use. */\n  source: customPropTypes.every([customPropTypes.disallow(['sourceUrl']), PropTypes.oneOf(['youtube', 'vimeo'])]),\n\n  /** Specifies a url to use for embed. */\n  url: customPropTypes.every([customPropTypes.disallow(['source']), PropTypes.string])\n} : {};","import * as React from \"react\";\r\nimport { withLayout } from \"../components/Layout\";\r\nimport { Grid, Image, Embed } from 'semantic-ui-react'\r\nimport { graphql } from \"gatsby\"\r\n\r\nconst MoviesPage = (props) => {\r\n\r\n    const movie = props.data.movies.movie\r\n\r\n    if (movie) {\r\n        return (\r\n            <div>\r\n                <Grid style={{ marginTop: 50 }} textAlign='center'>\r\n                    <Grid.Row>\r\n                        <Grid.Column verticalAlign=\"top\" textAlign=\"center\" mobile={12} tablet={12} computer={4}  >\r\n                            <Image centered style={{ height: 330, width: 220, borderRadius: 5 }} src={`https://image.tmdb.org/t/p/w500/${movie.posterPath}`} />\r\n                        </Grid.Column>\r\n                        <Grid.Column mobile={12} tablet={12} computer={8}>\r\n                            <h1 style={{ color: \"#454569\", fontWeight: 'bold', textAlign: 'left' }}>{movie.title}</h1>\r\n                            <p style={{ color: \"#BEBEC2\", textAlign: 'left' }}>{movie.releaseDate}</p>\r\n                            <p style={{ color: \"#BEBEC2\", textAlign: 'left' }}>Rating: {movie.voteAverage}</p>\r\n                            <p style={{ color: \"#BEBEC2\", textAlign: 'left' }}>{movie.overview}</p>\r\n                            {movie.videos.length > 0 &&\r\n                                <Grid.Row>\r\n                                    <Grid.Column textAlign=\"center\" mobile={12} tablet={12} computer={12} verticalAlign='bottom' >\r\n                                        <Embed\r\n                                            active\r\n                                            autoplay\r\n                                            id={movie.videos[0].key}\r\n                                            source='youtube'\r\n                                            iframe={{\r\n                                                allowFullScreen: true,\r\n                                                style: {},\r\n                                            }}\r\n                                        />\r\n                                    </Grid.Column>\r\n                                </Grid.Row>\r\n                            }\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (<p>Filme não encontrado</p>)\r\n    }\r\n\r\n};\r\nexport default withLayout(MoviesPage);\r\n\r\nexport const Query = graphql`\r\nquery MoviesQuery($movieId: ID!){\r\n    movies {\r\n        movie(id: $movieId ){          \r\n            title\r\n            releaseDate\r\n            posterPath\r\n            id            \r\n            voteAverage     \r\n            overview\r\n            videos(type: TRAILER) {\r\n                key\r\n                site\r\n            }\r\n        }  \r\n    }\r\n}`;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;"],"sourceRoot":""}